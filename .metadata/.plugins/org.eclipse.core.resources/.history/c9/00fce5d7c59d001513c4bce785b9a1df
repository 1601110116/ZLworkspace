/*
 * B1PhysicsList.cpp
 *
 *  Created on: Dec 8, 2015
 *      Author: zlstudio
 */


#include "B1PhysicsList.hh"
#include "G4Electron.hh"
#include "G4Gamma.hh"
#include "G4SystemOfUnits.hh"

#include "G4PhotoElectricEffect.hh"
#include "G4ComptonScattering.hh"
#include "G4GammaConversion.hh"

#include "G4CoulombScattering.hh"
#include "G4eIonisation.hh"
#include "G4eBremsstrahlung.hh"

#include "G4ParticleDefinition.hh"
#include "G4ProcessManager.hh"
#include "G4PhysicsListHelper.hh"

#include "G4EmStandardPhysics.hh"

B1PhysicsList::B1PhysicsList():G4VUserPhysicsList() {
	RegisterPhysics(new G4EmStandardPhysics());
}

B1PhysicsList::~B1PhysicsList() {
}

void B1PhysicsList::ConstructParticle(){
	G4Electron::ElectronDefinition();
	G4Gamma::GammaDefinition();
}

void B1PhysicsList::ConstructProcess(){
	AddTransportation();
	ConstructEM();
}

void B1PhysicsList::SetCuts(){
	//SetCutsWithDefault();
	defaultCutValue = 1.0*mm;
}

void B1PhysicsList::ConstructEM()
{
	 // Get pointer to G4PhysicsListHelper
	  G4PhysicsListHelper* ph = G4PhysicsListHelper::GetPhysicsListHelper();

	  //  Get pointer to gamma
	  G4ParticleDefinition* particle = G4Gamma::GammaDefinition();

	  // Construct and register processes for gamma
	  ph->RegisterProcess(new G4PhotoElectricEffect(), particle);
	  ph->RegisterProcess(new G4ComptonScattering(), particle);
	  ph->RegisterProcess(new G4GammaConversion(), particle);

	  //for electron:
	  particle = G4Electron::ElectronDefinition();
	  ph->RegisterProcess(new G4eIonisation(), particle);
	  ph->RegisterProcess(new G4eBremsstrahlung(), particle);

}
