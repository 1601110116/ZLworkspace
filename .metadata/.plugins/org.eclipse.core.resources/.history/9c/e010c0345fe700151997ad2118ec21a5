/*
 * Eular.cpp
 *
 *  Created on: Mar 6, 2016
 *      Author: zlstudio
 */

#include <Eular.h>


void Eular::nextStep(Grid* grid,double dt){
	Partical*  partical_iterator;
	for_each_Partical(grid,partical_iterator)
		grid->moveParticalTo(partical_iterator,*(partical_iterator->Position)+new Vector3D(dt,0,0));
	end_for_each_Partical(partical_iterator);

	//grid->showGridMap();
}

void Eular::nextStep2(Grid* grid,double dt){
	Partical*  partical_iterator,*partical_iterator2;

	double e=0.1;

	for_each_Partical(grid,partical_iterator)

		Vector3D* speed=new Vector3D(0,0,0);

		for_each_Partical(grid,partical_iterator2)

			if(partical_iterator2!=partical_iterator){
				*(speed)+= *(*(partical_iterator->Position)-partical_iterator2->Position)*(*(partical_iterator2->Position)>>partical_iterator->Position);
			}

			*(speed)*=e;
		end_for_each_Partical(partical_iterator2);

		grid->moveParticalTo(partical_iterator,*(partical_iterator->Position)+speed);


	end_for_each_Partical(partical_iterator);

	//grid->showGridMap();
}
